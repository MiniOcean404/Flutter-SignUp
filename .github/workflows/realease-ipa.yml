# github action Flutter https://juejin.cn/post/7080764562609274916
# 插件市场：https://github.com/marketplace?type=actions

# 这表示该工作流文件的名称，将在 Github 的 actions 选项卡作为名称显示
name: flutter_sign_in_ipa
on:
  # 这将触发该工作流的事件名称，它可以包含事件列表，例如这里监听的事 push
  push:
    branches:
      - master
      - dev
    tags:
      - 'release-v*'
    paths-ignore:
      - '.idea/**'
      - '.gitattributes'
      - '.github/**.json'
      - '.gitignore'
      - '.gitmodules'
      - '**.md'
      - '**/*.txt'
      - '**/*.png'
      - '**/*.jpg'
      - 'LICENSE'
      - 'NOTICE'
  pull_request:
    paths-ignore:
      - '.idea/**'
      - '.gitattributes'
      - '.github/**.json'
      - '.gitignore'
      - '.gitmodules'
      - '**.md'
      - '**/*.txt'
      - '**/*.png'
      - '**/*.jpg'
      - 'LICENSE'
      - 'NOTICE'

jobs:
  # 这是工作 ID，你也可以根据自己的需要命名，会在 action 的执行过程中显示
  build:
    name: build-release-ipa
    # jobs 需要运行在虚拟机上，在这里中使用了 ubuntu-latest，当然你也可以使用windows-latest 或者 macos-latest；
    runs-on: macos-latest
    # 每个 jobs 可以将需要执行的内容划分为不同步骤；
    steps:
      # 使用一些官方或者第三方的 actions 来执行，
      # 例如：这里使用官方的 actions/checkout@v3，它会check-out 我们的 repo
      # 之后工作流可以直接访问 repo 里的文件；
      - uses: actions/checkout@v3
      # 使用flutter环境
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.1'
          channel: 'stable'
      # 动态输入 配置信息到文件中
      # - uses: finnp/create-file-action@master
      # env:
      #   FILE_NAME: lib/common/config/ignoreConfig.dart
      #   FILE_DATA: class NetConfig { static const CLIENT_ID = "${{ secrets.CLIENT_ID }}"; static const CLIENT_SECRET = "${{ secrets.CLIENT_SECRET }}";}
      # 用于提供执行命令；
      - run: flutter pub get
      - run: flutter pub deps
      - run: flutter build ipa  --release --no-codesign
      - run: |
          flutter build ios --release --no-codesign --split-debug-info=./symbols 
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
  ipa:
    name: Generate IPA
    # 存在 tag 的时候才会触发该任务执行
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.1'
      - run: flutter pub get
      - run: |
          flutter build ios --release --no-codesign --split-debug-info=./symbols 
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      # - run: |
      #     flutter config --enable-macos-desktop
      #     flutter build macos --release
      #     cd build/macos/Build/Products/Release
      #     zip -r movie.mac.zip movie.app/*

      # 用于将构建出来的 build/app/outputs/apk/release/app-release.apk 上传，并等到 release 任务内使用；
      - name: Upload APK
        # 上传到 release 任务
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: build/ios/iphoneos/app.ipa
  release:
    name: Release IPA
    needs: ipa
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
      # 接收上传的东西
      - name: Download IPA from build
        uses: actions/download-artifact@v2
        with:
          name: ipa
      - name: Show downloaded files list
        run: ls -R
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        # 创建一个 release 版本，这里使用的 secrets.GITHUB_TOKEN 是官方内置的 secrets ，我们直接使用就可以了；
        env:
          GITHUB_TOKEN: ${{ secrets.FLUTTER_SIGN_UP_CICD }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
        # 将 apk 上传到刚刚创建的 release 版本里，自此就完成了 action 的发布流程
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.FLUTTER_SIGN_UP_CICD }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app.ipa
          asset_name: app.ipa
          asset_content_type: application/zip
      # - uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       build/app/outputs/flutter-apk/*.apk
      #       build/ios/iphoneos/app.ipa
      #     # build/macos/Build/Products/Release/movie.mac.zip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
